//Day 1
1.Show first name, last name, and gender of patients whose gender is 'M'
   SELECT first_name,last_name,gender
   from patients
   WHERE gender='M';

2.Show first name and last name of patients who does not have allergies. (null)
select first_name,last_name
from patients
where allergies is null;

3.Show first name of patients that start with the letter 'C'
select first_name
from patients
where first_name like 'C%'; 

4.Show first name and last name of patients that weight within the range of 100 to 120 (inclusive)
select COUNT(*) AS total_patients
from patients
WHERE YEAR (birth_date)=2010;

5.Update the patients table for the allergies column. If the patient's allergies is null then replace it with 'NKA'
UPDATE patients
SET allergies = 'NKA'
WHERE allergies IS NULL;

6.Show first name and last name concatinated into one column to show their full name.
SELECT 
concat(first_name," ",last_name)
from patients;

//DAY 2
1.Show how many patients have a birth_date with 2010 as the birth year.
SELECT COUNT(*) AS total_patients
FROM patients
WHERE YEAR(birth_date) = 2010;

2.Show the first_name, last_name, and height of the patient with the greatest height.
SELECT
  first_name,
  last_name,
  MAX(height) AS height
FROM patients;

3.Show all columns for patients who have one of the following patient_ids:
1,45,534,879,1000
select * 
from patients
where patient_id in (1,45,534,879,1000);

4.Show the total number of admissions.
SELECT COUNT(*) AS total_admissions
FROM admissions;

5.Show all the columns from admissions where the patient was admitted and discharged on the same day.

SELECT *
FROM admissions
WHERE admission_date = discharge_date;

6.Show the patient id and the total number of admissions for patient_id 579.
SELECT
  patient_id,
  COUNT(*) AS total_admissions
FROM admissions
WHERE patient_id = 579;

7.Based on the cities that our patients live in, show unique cities that are in province_id 'NS'?
Solutions
SELECT DISTINCT(city) AS unique_cities
FROM patients
WHERE province_id = 'NS';

8.Write a query to find the first_name, last name and birth date of patients who has height greater than 160 and weight greater than 70
Solution
SELECT first_name, last_name, birth_date FROM patients
WHERE height > 160 AND weight > 70;

9.Write a query to find list of patients first_name, last_name, and allergies where allergies are not null and are from the city of 'Hamilton'
Solution
SELECT
  first_name,
  last_name,
  allergies
FROM patients
WHERE
  city = 'Hamilton'
  AND allergies IS NOT null

  10.Show unique birth years from patients and order them by ascending.
Solutions (1/2)
SELECT
  DISTINCT YEAR(birth_date) AS birth_year
FROM patients
ORDER BY birth_year;

//DAY 3
1.Show unique first names from the patients table which only occurs once in the list.
For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list. If only 1 person is named 'Leo' then include them in the output.
Solutions 
SELECT first_name
FROM patients
GROUP BY first_name
HAVING COUNT(first_name) = 1

2.Show patient_id and first_name from patients where their first_name start and ends with 's' and is at least 6 characters long.
Solutions 
SELECT
  patient_id,
  first_name
FROM patients
WHERE first_name LIKE 's____%s';

3.Show patient_id, first_name, last_name from patients whos diagnosis is 'Dementia'.
Primary diagnosis is stored in the admissions table.
Solutions 
SELECT
  patients.patient_id,
  first_name,
  last_name
FROM patients
  JOIN admissions ON admissions.patient_id = patients.patient_id
WHERE diagnosis = 'Dementia';

4.Display every patient's first_name.
Order the list by the length of each name and then by alphabetically.
Solution
SELECT first_name
FROM patients
ORDER BY
  LEN(first_name),
  first_name;


//Day 4
Show the total amount of male patients and the total amount of female patients in the patients table.
Display the two results in the same row.
Solutions 
SELECT 
  (SELECT COUNT(*) FROM patients WHERE gender='M') AS male_count, 
  (SELECT COUNT(*) FROM patients WHERE gender='F') AS female_count;

2.Show first and last name, allergies from patients which have allergies to either 'Penicillin' or 'Morphine'. Show results ordered ascending by allergies then by first_name then by last_name.
SELECT first_name,last_name,allergies
from patients
where allergies in ('Penicillin','Morphine')
order by allergies,first_name,last_name

3.Show patient_id, diagnosis from admissions. Find patients admitted multiple times for the same diagnosis.
Solution
SELECT patient_id, diagnosis
FROM admissions
GROUP BY
  patient_id,
  diagnosis
HAVING COUNT(*) > 1;

//DAY 5
1.Show the city and the total number of patients in the city.
Order from most to least patients and then by city name ascending.
Solution
SELECT
  city,
  COUNT(*) AS num_patients
FROM patients
GROUP BY city
ORDER BY num_patients DESC, city ASC;

//2.Show first name, last name and role of every person that is either patient or doctor.
The roles are either "Patient" or "Doctor"
Solution
SELECT first_name, last_name, 'Patient' AS role FROM patients
    UNION ALL
SELECT first_name, last_name, 'Doctor'

//3.Show all allergies ordered by popularity. Remove NULL values from query.
Solutions 
SELECT
  allergies,
  COUNT(*) AS total_diagnosis
FROM patients
WHERE
  allergies IS NOT NULL
GROUP BY allergies
ORDER BY total_diagnosis DESC


//DAY 6
1.Show all patient's first_name, last_name, and birth_date who were born in the 1970s decade. Sort the list starting from the earliest birth_date.
Solutions 
SELECT
  first_name,
  last_name,
  birth_date
FROM patients
WHERE
  YEAR(birth_date) BETWEEN 1970 AND 1979
ORDER BY birth_date ASC;

//2.We want to display each patient's full name in a single column. Their last_name in all upper letters must appear first, then first_name in all lower case letters. Separate the last_name and first_name with a comma. Order the list by the first_name in decending order
EX: SMITH,jane
Solutions 
SELECT
  CONCAT(UPPER(last_name), ',', LOWER(first_name)) AS new_name_format
FROM patients
ORDER BY first_name DESC;

//3.Show the province_id(s), sum of height; where the total sum of its patient's height is greater than or equal to 7,000.
Solutions 
SELECT
  province_id,
  SUM(height) AS sum_height
FROM patients
GROUP BY province_id
HAVING sum_height >= 7000

//DAY 7
Show unique birth years from patients and order them by ascending.
Solutions 
SELECT
  DISTINCT YEAR(birth_date) AS birth_year
FROM patients
ORDER BY birth_year;
//day 8
Show unique birth years from patients and order them by ascending.
Solutions 
SELECT
  DISTINCT YEAR(birth_date) AS birth_year
FROM patients
ORDER BY birth_year;

//day 9
 1. Write an SQL query to find the position of the alphabet (‘a’) in the first name column ‘Amitabh’ from the Worker table.
SELECT INSTR(FIRST_NAME, 'a') FROM Worker WHERE FIRST_NAME = 'Amitabh';

2. Write an SQL query to print the first three characters of  FIRST_NAME from the Worker table.
Select substring(FIRST_NAME,1,3) from Worker;
/////
-Write an SQL query to fetch duplicate records having matching data in some fields of a table.
select WORKER_TITLE,AFFECTED_FROM , COUNT(*)FROM Title
GROUP BY WORKER_TITLE,AFFECTED_FROM HAVING COUNT(*)>1;

-Write an SQL query to show only odd rows from a table.
SELECT * FROM Worker WHERE WORKER_ID % 2!=0;

-Write an SQL query to clone a new table from another table.
CREATE TABLE WorkerClone AS SELECT * FROM Worker;

-Write an SQL query to fetch intersecting records of two tables.
SELECT * FROM Worker INTERSECT SELECT * FROM WorkerClone;

--CURRENT DATE times
SELECT CURRENT_TIMESTAMP;

-2ND HIGHEST SALARY
select *from employee 
group by salary 
order by  salary desc limit 1,1;

SELECT max(Salary) from Worker where Salary not in (Select max(Salary) from Worker);

-Write an SQL query to show one row twice in the results from a table.
Select FIRST_NAME ,DEPARTMENT FROM Worker where DEPARTMENT ='HR' UNION ALL
select FIRST_NAME ,DEPARTMENT FROM Worker where DEPARTMENT ='HR'

-Write an SQL query to fetch intersecting records of two tables.
SELECT * FROM Worker
INTERSECT
SELECT * FROM WorkerClone;

SQLite and MySQL compatible syntax
SELECT w.*
FROM Worker w
INNER JOIN WorkerClone wc ON w.WORKER_ID = wc.WORKER_ID;

-Write an SQL query to fetch the first 50% of records from a table.
select * from WORKER where WORKER_ID<=(SELECT COUNT(WORKER_ID)/2 FROM WORKER);

-Write an SQL query to fetch the departments that have less than five people in them.
SELECT DEPARTMENT, COUNT(WORKER_ID) AS 'Number Of Worker ' from Worker
GROUP BY DEPARTMENT HAVING COUNT(WORKER_ID)<5;

-Write an SQL query to show all departments along with the number of people in there.
Write an SQL query to fetch the departments that have less than five people in them.

-Write a solution to find the ids of products that are both low fat and recyclable.
select product_id from Products
where low_fats='Y' AND recyclable='Y';

SQL query to fetch all the employees who are not working on any project.
select * from employeeDetails
left join EmployeeSalary 
on employeeDetails.eid=EmployeeSalary .eid
where project is null;

Write an SQL query to fetch only odd rows from the table.
select empid from EmployeeDetails
where emid%2!=0;